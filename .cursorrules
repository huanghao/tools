# Cursor Rules for mytools project

## 代码生成规则

### 不要自动生成的文件类型
- 除非用户明确要求，否则不要自动生成README文件
- 除非用户明确要求，否则不要自动生成测试脚本
- 除非用户明确要求，否则不要自动生成文档文件
- 除非用户明确要求，否则不要自动生成配置文件

### 代码生成偏好
- 专注于实现用户请求的核心功能
- 保持代码简洁，避免过度工程化
- 优先使用现有的依赖和工具
- 遵循项目的现有代码风格

### 文件操作规则
- 不要删除用户创建的文件，除非明确要求
- 修改文件时，保持原有的结构和风格
- 添加新功能时，优先扩展现有文件而不是创建新文件

### 项目特定规则
- 这是一个工具集合项目，每个工具应该独立且实用
- 保持工具之间的最小依赖关系
- 优先使用Python标准库和轻量级第三方库

## 代码风格要求

### Import检查规则
- 不要使用try/catch来测试import的库是否存在
- 所有依赖都已添加到requirements.txt中，假设它们存在
- 直接import需要的库，不需要异常处理

### 文件存在性检查规则
- 不要使用大的try/catch块来检查文件是否存在
- 直接使用os.path.exists()或pathlib.Path.exists()检查文件
- 减少增加代码缩进深度

### 错误处理原则
- 保持代码简洁，减少不必要的异常处理
- 对于可预见的错误（如文件不存在），直接检查并退出
- 只在真正需要的地方使用try/catch

## 响应规则

### 默认行为
- 直接回答用户问题，不要假设需要额外文件
- 如果用户没有明确要求，不要提供使用说明或示例
- 专注于解决用户提出的具体问题

### 代码质量
- 确保生成的代码能够正常运行
- 包含必要的错误处理
- 提供清晰的函数和变量命名

## 例外情况
- 如果用户明确要求生成README、测试或文档，则按照要求执行
- 如果项目结构需要配置文件来正常运行，则创建必要的配置